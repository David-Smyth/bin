vi wlprogress 

#!/usr/bin/env ruby
# wlprogress: identify starts and stops of each module for a year

# Debugging:
# put 'binding.pry' where you want an interactive debugger to start
require 'pry'

##########################
# Standard option parsing
#
require 'optparse'

options = {
  debug: false,
  top: '/Users/david.smyth/Code/Westlawn/_LESSON REPTS MASTER FILES/',
  csv: false
}

optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: wlprogress [options]'
  opts.on('-h', '--help', 'Show this help message') do ||
    puts opts
  end
  opts.on('-d', '--debug', 'Enable debugging.') do ||
    options[:debug] = true
  end
  opts.on('-v', '--verbose', 'Enable verbose human readable output.') do ||
    options[:verbose] = true
  end
  opts.on('-t', '--top FOLDER', 'Top folder of student lesson files.') do |tf|
    options[:top] = tf
  end
  opts.on('-c', '--csv', 'Generate CSV file.') do ||
    options[:csv] = true
  end
end

begin
  optparse.parse!
  # Add symbols to 'required' array for each required argument
  required = [:top]
  missing = required.select { |reqd| options[reqd].nil? }
  raise OptionParser::MissingArgument, missing.join(', ') unless missing.empty?
  raise OptionParser::InvalidOption, ARGV unless ARGV.empty?
rescue OptionParser::MissingArgument, OptionParser::InvalidOption => e
  puts e
  puts optparse
  exit
end

DEBUG = options[:debug].freeze
VERBOSE = options[:verbose].freeze
TOP = options[:top].freeze
CSV = options[:csv].freeze
#
# End of standard option parsing
################################

